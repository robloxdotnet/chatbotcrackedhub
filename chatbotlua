-- Custom OrionLib
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Guerric9018/OrionLibFixed/main/OrionLib.lua')))()

-- Initialiazing
_G.CHATBOTHUB_BLACKLISTED = {
	--["Name"] = true,
}

_G.CHATBOTHUB_DISPLAYTOFULLNAME = {
	--["Display name"] = "Full name"
}

_G.CHATBOTHUB_BLACKLISTEDCONTENT = {
	--"Full name (Display name))"
}

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

local alreadyRan = true

local GUI = Instance.new("ScreenGui")
GUI.Parent = game.CoreGui
GUI.IgnoreGuiInset = true
GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

if _G.CHATBOTHUB_RAN == nil then
    alreadyRan = false
	_G.CHATBOTHUB_TTA = false
	_G.CHATBOTHUB_AI_MODEL = "Llama-8B ( default | 5 points )"
	_G.CHATBOTHUB_ON = false
	_G.CHATBOTHUB_CREDITS = 0
	_G.CHATBOTHUB_LOGIN = false
	_G.CHATBOTHUB_PREMIUM = false
	_G.CHATBOTHUB_CUSTOMPROMPT = false
	_G.CHATBOTHUB_CUSTOMPROMPTTEXT = "Just be a normal AI."
    _G.CHATBOTHUB_WHITELIST = false
	_G.CHATBOTHUB_BOTFORMAT = false
	_G.CHATBOTHUB_TTA_RUNNING = true
	_G.CHATBOTHUB_CHAT_BYPASS = false
	_G.CHATBOTHUB_KEY = "default"
	_G.CHATBOTHUB_LOADED = false
	_G.CHATBOTHUB_DELAYED_CHAT = false
	_G.CHATBOTHUB_REMINDING_STATE = false
	_G.CHATBOTHUB_MaxDistance = 20
	_G.CHATBOTHUB_Character = "Normal"
	_G.CHATBOTHUB_BUFFER = false
	_G.CHATBOTHUB_LANGUAGE = "en"
end

_G.CHATBOTHUB_RAN = true

-- Debug mode: Infinite points after login
local debugMode = true -- Set this to 'false' to disable debug mode

-- Chat system detection
local msg = function() return end

local success, textChannels = pcall(function()
	return game:GetService("TextChatService").TextChannels
end)

if success then
	print("New chat system detected")
	msg = function(txt) game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(txt) end
else
	print("Old chat system detected")
	msg = function(txt) game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(txt, "All") end
end

-- Anti chat logger (not for Celery)
local function launchAntiLogger()
	if (string.sub(identifyexecutor(), 1, 6)):lower() ~= "celery" then
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AnthonyIsntHere/anthonysrepository/main/scripts/AntiChatLogger.lua", true))()
		OrionLib:MakeNotification{
			Name = "Success",
			Content = "Anti chat logger launched!",
			Image = "rbxassetid://7115671043",
			Time = 3
		}
	else
		print("Celery detected, no anti-chat logger. Use with caution!")
		OrionLib:MakeNotification{
			Name = "Error",
			Content = "You are using Celery, which does not support the anti chat logger.",
			Image = "rbxassetid://16661795528",
			Time = 3
		}
	end
end

-- Checks if the executor has writefile
function writeFileAvailable()
	if writefile then
		return true
	end
end

-- AI characters
local AIs = {
	"Furry",
	"Roast",
	"Waifu",
	"Nerd",
	"Christian",
	"Robot",
    "Brainrot",
	"Normal"
}

-- AI models
local AiModels = {
	"Llama-8B ( default | 5 points )",
	"Llama2-7B ( if default one fails | 5 points )",
	"Llama-70B ( 50 points )"
}

-- Cost of each AI model
local AiCost = {
	["Llama-8B ( default | 5 points )"] = 5,
	["Llama2-7B ( if default one fails | 5 points )"] = 5,
	["Llama-70B ( 50 points )"] = 50
}

-- Languages
local Languages = {
	"en",
	"fr",
	"ru",
	"es",
	"br",
	"ar"
}

local updateCredits = function() return end
local updatePremium = function() return end

-- Finds player's username and name from its username or displayname
local findPlayerName = function(name)
	for i,player in pairs(game.Players:GetChildren()) do
		local prefix_length = #name
		local name_prefix = player.Name:sub(1, prefix_length)
		if(name_prefix == name) then
			return player.Name, player.DisplayName
		end
	end
	for i,player in pairs(game.Players:GetChildren()) do
		local prefix_length = #name
		local name_prefix = player.DisplayName:sub(1, prefix_length)
		if(name_prefix == name) then
			return player.Name, player.DisplayName
		end
	end
	return nil, nil
end

-- Finds a player from its username or displayname
local findPlayer = function(name)
	for i,player in pairs(game.Players:GetChildren()) do
		local prefix_length = #name
		local name_prefix = player.Name:sub(1, prefix_length)
		if(string.lower(name_prefix) == name) then
			return player
		end
	end
	for i,player in pairs(game.Players:GetChildren()) do
		local prefix_length = #name
		local name_prefix = player.DisplayName:sub(1, prefix_length)
		if(string.lower(name_prefix) == name) then
			return player
		end
	end
	return nil, nil
end

-- Stops every ongoing action
local function stopAction()
	print(stopping)
	_G.CHATBOTHUB_TTA_RUNNING = false
	wait(1)
	_G.CHATBOTHUB_TTA_RUNNING = true
end

-- TTA actions
local function jump()
	LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
end

local function spin()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
        
        while _G.CHATBOTHUB_TTA_RUNNING do
            humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(0, math.rad(15), 0)
            wait(0.1)
        end
	end
end

local function follow(player)
	local TargetPlayer = findPlayer(player)
	print("following " .. TargetPlayer.DisplayName)
	_G.CHATBOTHUB_TARGET_PLAYER = TargetPlayer
	while _G.CHATBOTHUB_TTA_RUNNING  and TargetPlayer == _G.CHATBOTHUB_TARGET_PLAYER do
		LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):MoveTo(TargetPlayer.Character.HumanoidRootPart.Position)
		wait(0.05)
	end
end

-- Does the actions depending on the AI response
local function checkCommand(input)
	input = string.lower(input)
    if input == "stop" then 
		stopAction()
		return
	end
	if input == "jump" then 
		jump()
		return
	end
	if input == "spin" then 
		spin()
		return
	end
	if input == "null" then
		return
	end

    local followPattern = "^follow%s+(.+)"
    local match = string.match(input, followPattern)

    if match then
        follow(match)
    end
end

-- Login
local function login(key)
	key = HttpService:UrlEncode(key)
	local response = game:HttpGet("https://guerric.pythonanywhere.com/login?uid="..(tostring(LocalPlayer.UserId)) .. "&key=" .. key)

	-- If login is successful
	if string.find(response, "success") then
		_G.CHATBOTHUB_LOGIN = true

		-- Debug mode: Infinite points after login
		if debugMode then
			_G.CHATBOTHUB_CREDITS = 9999
			_G.CHATBOTHUB_PREMIUM = true
			OrionLib:MakeNotification{
				Name = "Debug Mode Activated",
				Content = "You have unlimited points and premium access!",
				Image = "rbxassetid://7115671043",
				Time = 5
			}
		end

		updateCredits()
		updatePremium()
		return true
	else
		OrionLib:MakeNotification{
			Name = "Login Failed",
			Content = "Incorrect key. Please try again.",
			Image = "rbxassetid://
