-- Custom OrionLib
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Guerric9018/OrionLibFixed/main/OrionLib.lua')))()

-- Debug flag
local debugMode = true -- Set this to true to enable debug mode

-- Initializing
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- GUI initialization for debugging
local GUI = Instance.new("ScreenGui")
GUI.Parent = game.CoreGui
GUI.IgnoreGuiInset = true
GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Function to send messages to chat
local function msg(txt)
	print("Message: " .. txt)
	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(txt, "All")
end

-- Basic action functions
local function jump()
	print("Jump command received")
	LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
end

local function spin()
	print("Spin command received")
	local humanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if humanoidRootPart then
		for _ = 1, 10 do
			humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(0, math.rad(36), 0)
			wait(0.1)
		end
	end
end

-- Command handler
local function handleCommand(input)
	input = string.lower(input)
	print("Command received: " .. input)

	if input == "jump" then 
		jump()
	elseif input == "spin" then 
		spin()
	else
		print("Unknown command: " .. input)
	end
end

-- Simulated AI response handler (simplified for debug)
local function onAIResponse(response)
	print("AI Response: " .. response)
	handleCommand(response)
end

-- Test the script with some commands
onAIResponse("jump")
wait(2)
onAIResponse("spin")

-- Final notification to confirm the script ran
OrionLib:MakeNotification{
	Name = "Script Loaded",
	Content = "Debug version loaded and executed.",
	Image = "rbxassetid://7115671043",
	Time = 3
}
